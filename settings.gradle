dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://raw.githubusercontent.com/saki4510t/libcommon/master/repository/' }
        maven { url 'https://gitee.com/liuchaoya/libcommon/raw/master/repository/' }
        maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url "https://jitpack.io" }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
        google()
    }
}
rootProject.name = "AOptKit"
include ':app'
include ':optk_fps'
include ':optk_obj_pool'
include ':optk_obj_pool_test'
//SwiftKit
include ':SwiftKit'
project(':SwiftKit').projectDir = new File("D:\\WorkSpace\\GitHub\\SwiftKit")
include ':SwiftKit:basick'
include ':SwiftKit:xmlk'
include ':SwiftKit:bindk'
//AStackKit
include ':AStackKit'
project(':AStackKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AStackKit")
include ':AStackKit:basic'
include ':AStackKit:stackk_callback'
//KUtilKit
include ':KUtilKit'
project(':KUtilKit').projectDir = new File("D:\\WorkSpace\\GitHub\\KUtilKit")
include ':KUtilKit:utilk_android'
include ':KUtilKit:utilk_kotlin'
